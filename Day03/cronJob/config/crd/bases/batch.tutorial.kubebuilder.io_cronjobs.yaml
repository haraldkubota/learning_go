
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: cronjobs.batch.tutorial.kubebuilder.io
spec:
  group: batch.tutorial.kubebuilder.io
  names:
    kind: CronJob
    listKind: CronJobList
    plural: cronjobs
    singular: cronjob
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CronJob is the Schema for the cronjobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CronJobSpec defines the desired state of CronJob
            properties:
              concurrencyPolicy:
                description: 'Specifies how to treat concurrent executions of a Job.
                  Valid values are: - "Allow" (default): allows CronJobs to run concurrently;
                  - "Forbid": forbids concurrent runs, skipping next run if previous
                  run hasn''t finished yet; - "Replace": cancels currently running
                  job and replaces it with a new one'
                enum:
                - Allow
                - Forbid
                - Replace
                type: string
              failedJobsHistoryLimit:
                description: The number of failed finished jobs to retain. This is
                  a pointer to distinguish between explicit zero and not specified.
                format: int32
                minimum: 0
                type: integer
              jobTemplate:
                description: Specifies the job that will be created when executing
                  a CronJob.
              schedule:
                description: The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
                minLength: 0
                type: string
              startingDeadlineSeconds:
                description: Optional deadline in seconds for starting the job if
                  it misses scheduled time for any reason.  Missed jobs executions
                  will be counted as failed ones.
                format: int64
                minimum: 0
                type: integer
              successfulJobsHistoryLimit:
                description: The number of successful finished jobs to retain. This
                  is a pointer to distinguish between explicit zero and not specified.
                format: int32
                minimum: 0
                type: integer
              suspend:
                description: This flag tells the controller to suspend subsequent
                  executions, it does not apply to already started executions.  Defaults
                  to false.
                type: boolean
            required:
            - jobTemplate
            - schedule
            type: object
          status:
            description: CronJobStatus defines the observed state of CronJob
            properties:
              active:
                description: A list of pointers to currently running jobs.
                items: {}
                type: array
              lastScheduleTime:
                description: Information when was the last time the job was successfully
                  scheduled.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
